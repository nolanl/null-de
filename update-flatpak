#!/bin/bash

#Somewhat based on https://github.com/igorlogius/unattended-flatpak-upgrades

#XXX Check that XDG_RUNTIME_DIR is set for "flatpak ps"
#XXX Check that DBUS_SESSION_BUS_ADDRESS is set for "notify-send"
#XXX Or find a likely process and steal from their env? sway/mutter/kwin? dbus-daemon?

#XXX add a flag to skip update and show perms diffs character-by-character w/ color, using
#    "git diff --word-diff=color --word-diff-regex=.", then suggest running it when diffs
#    are found. Fallback to dumb diff if "git" is not installed.

mkdir -p ~/.var/log
LOG=~/.var/log/update-flatpak.log
echo "Starting update-flatpak at $(date)" >$LOG

echo "Updating runtimes" >>$LOG
flatpak update --noninteractive --runtime &>>$LOG

echo "Updating apps" >>$LOG
filter () { #Reformat and filter out harmless sections, then sort
    awk '/^\[.+\]$/ {grp=$line; next} /./ {print grp,$line}' |
        egrep -v '^\[(Build|Extra Data|Application|Runtime|Instance|Environment|Extension [^ ]+)\] ' |
        sort
}
flatpak remote-ls --updates --app --columns=application,origin | {
    while read APP ORIGIN; do
        echo "Checking for permissions changes for $APP" >>$LOG
        if diff -y --suppress-common-lines -w -B -W 30000 \
                <(flatpak info -m $APP | filter) \
                <(flatpak remote-info --show-metadata $ORIGIN $APP | filter) | \
                tr '\t' ' ' >>$LOG; then
            echo "No changes, updating" >>$LOG
            flatpak update --noninteractive --app $APP &>>$LOG
        else
            echo "^^^^CHANGES FOUND^^^^" >>$LOG
            echo "If the changes are OK, run 'flatpak update $APP'" >>$LOG
            notify-send -t 0 "Flatpak permissions changed for $APP" "Check $LOG"
        fi
    done
}

#XXX This will not warn if the app didn't update, but its runtime did!
echo "Checking for running apps that need to be restarted" >>$LOG
NEED_RESTART=$(join \
                   <(flatpak ps --columns=application:f,commit:f | sort) \
                   <(flatpak list --app --columns=application:f,active:f | sort) \
                   | awk '$2!=$3 {print $1}')
if [ -n "$NEED_RESTART" ]; then
    echo "Restarts needed for $NEED_RESTART" >>$LOG
    notify-send -t 0 "Flatpak Restart(s) Required" "$NEED_RESTART"
fi

echo "Done at $(date)" >>$LOG
